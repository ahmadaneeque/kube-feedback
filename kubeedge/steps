
arch=$(uname -m); if [[ $arch != x86_64 ]]; then arch='arm64'; fi;  curl -LO https://kubeedge.pek3b.qingstor.com/bin/v1.12.0/$arch/keadm-v1.12.0-linux-$arch.tar.gz  && tar xvf keadm-v1.9.2-linux-$arch.tar.gz && chmod +x keadm && ./keadm join --kubeedge-version=1.9.2 --region=zh --cloudcore-ipport=51.142.99.211:10000 --quicport 10001 --certport 10002 --tunnelport 10004 --edgenode-name edgenode --edgenode-ip 192.168.1.1 --token 53e462649f9176ef3156c070871e4194af3153d478900ce45db2ed7c25225f9a.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NzM0MjM4MzB9.cWbQ7iQxNUvt-KzY_EKgun69h-wmud1ZLMPDo_1_cXU --with-edge-taint



ps -p 1 -o comm=

az aks get-credentials --resource-group SSAICloudMigration --name kubeedge

az vmss list-instance-public-ips -g MC_SSAICloudMigration_kubeedge_uksouth -n aks-nodepool1-18462672-vmss

az aks create -g SSAICloudMigration -n kubeedge --kubernetes-version 1.23.12 --enable-node-public-ip

az aks nodepool add -g SSAICloudMigration --cluster-name kubeedge -n nodepool2 --enable-node-public-ip


https://dev.to/s1ntaxe770r/how-to-setup-ssh-within-a-docker-container-i5i

https://medium.com/@gaponcic.d/getting-started-with-kubeedge-on-virtual-machines-8cfa2b314b11

https://gokulchandrapr.medium.com/kubeedge-extending-kubernetes-to-edge-dcfedd91f5f9

docker build edgenode .

docker run --network=kind -v /var/run/docker.sock:/var/run/docker.sock -ti edgenode

docker run --privileged -d --network=kind -v /var/run/docker.sock:/var/run/docker.sock --name=edgenode edgenode

docker run --rm kubeedge/installation-package:v1.12.0 cat /usr/local/bin/keadm > /usr/local/bin/keadm && chmod +x /usr/local/bin/keadm

curl -LO https://storage.googleapis.com/minikube/releases/v1.22.1/minikube-linux-amd64
curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl

az aks show --resource-group SSAICloudMigration --name kubeedge --query nodeResourceGroup -o tsv

az network public-ip create \
    --resource-group SSAICloudMigration \
    --name kube-cloud \
    --sku Standard \
    --allocation-method static


TOKEN=$(sudo keadm gettoken --kube-config=/home/ahmad/.kube/config)

copy to edge

# keadm init --advertise-address="THE-EXPOSED-IP"(only work since 1.3 release)

ssh test@172.18.0.2
sudo apt update && sudo apt install docker.io -y

sudo usermod -aG docker $USER
sudo reboot


curl -fsSL -O https://github.com/kubeedge/kubeedge/releases/download/v1.12.1/keadm-v1.12.1-linux-amd64.tar.gz
tar xvf keadm-v1.12.1-linux-$arch.tar.gz
chmod +x keadm

keadm join --kubeedge-version=1.12.0 --cloudcore-ipport=51.132.134.247:10000 --token=5e04ab816e79c7b0a91da8668023608683af200adb4ce84459418b9e2405ecf2.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NzM1MDUyMjJ9.CQFk1ILBNsYTkRzdBCvrtk_QwSfRlWItUMB0UXECkwA


cat TOKEN > token.txt

TOKEN=$(cat token.txt)


docker exec edgenode service ssh start

docker exec edgenode 


docker kill edgenode

docker run --rm kubeedge/installation-package:v1.12.0 cat /usr/local/bin/keadm > /usr/local/bin/keadm && chmod +x /usr/local/bin/keadm
sudo keadm init --kube-config=/home/cloud/.kube/config --advertise-address=20.0.194.174

helm upgrade --install cloudcore ./cloudcore --namespace kubeedge --create-namespace -f ./cloudcore/values.yaml --set cloudCore.modules.cloudHub.advertiseAddress[0]=20.0.250.167

helm upgrade --install cloudcore . --namespace kubeedge --create-namespace

kubectl create ns kubeedge


helm upgrade --install cloudcore . --namespace kubeedge --create-namespace 

sudo keadm init --kube-config=/home/ahmad/.kube/config --advertise-address=20.49.242.8

helm uninstall cloudcore -n kubeedge

kubectl get secret -n kubeedge tokensecret -o=jsonpath='{.data.tokendata}' | base64 -d

sudo keadm gettoken --kube-config=/home/ahmad/.kube/config


sudo keadm join --cloudcore-ipport=20.204.211.199:10000 --token=$TOKEN

keadm join  --cloudcore-ipport=172.18.0.2:10000 --token=07161ac8f909c8b4d09756568bd93eb5981b06defd61e3a9694cfea3eab711bc.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NzM1MDA0NzF9.i3IlHYPkDtEdnBlIP5koZpdUO7q8dnbkYOKxKcK9MNc --kubeedge-version=v1.12.0


kubectl get cm tunnelport -n kubeedge -o yaml


iptables -t nat -A OUTPUT -p tcp --dport 10350 -j DNAT --to 51.142.99.211:10003
iptables -t nat -A OUTPUT -p tcp --dport 10351 -j DNAT --to 10.224.0.5:10003

iptables -t nat -A OUTPUT -p tcp --dport 10351 -j DNAT --to 10.224.0.6:10003


kubectl -n kubeedge rollout restart deployment cloudcore


systemctl restart edgecore.service



